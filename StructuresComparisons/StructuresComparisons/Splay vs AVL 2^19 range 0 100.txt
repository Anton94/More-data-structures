
Input data: every even element is in the range[0, 100] and every odd element has
	0% probability to be outside of the range
	100% probability to be like the previous 1 element(s)!


Running Inserts the even(index) elements and searches the odd(index) once of 524288 elements:

	Splay tree:
	...took 96 miliseconds.
	...and memory 3145728 bytes.
	AVL tree:
	...took 73 miliseconds.
	...and memory 4194304 bytes.
	Splay tree with no duplications of values:
	...took 55 miliseconds.
	...and memory 1212 bytes.
	AVL tree with no duplications of values:
	...took 14 miliseconds.
	...and memory 1616 bytes.

Input data: every even element is in the range[0, 100] and every odd element has
	0% probability to be outside of the range
	80% probability to be like the previous 8 element(s)!


Running Inserts the even(index) elements and searches the odd(index) once of 524288 elements:

	Splay tree:
	...took 108 miliseconds.
	...and memory 3145728 bytes.
	AVL tree:
	...took 73 miliseconds.
	...and memory 4194304 bytes.
	Splay tree with no duplications of values:
	...took 45 miliseconds.
	...and memory 1212 bytes.
	AVL tree with no duplications of values:
	...took 15 miliseconds.
	...and memory 1616 bytes.

Input data: every even element is in the range[0, 100] and every odd element has
	50% probability to be outside of the range
	100% probability to be like the previous 1 element(s)!


Running Inserts the even(index) elements and searches the odd(index) once of 524288 elements:

	Splay tree:
	...took 100 miliseconds.
	...and memory 3145728 bytes.
	AVL tree:
	...took 77 miliseconds.
	...and memory 4194304 bytes.
	Splay tree with no duplications of values:
	...took 44 miliseconds.
	...and memory 1212 bytes.
	AVL tree with no duplications of values:
	...took 13 miliseconds.
	...and memory 1616 bytes.
