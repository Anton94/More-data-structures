
Input data: every even element is in the range[0, 100] and every odd element has
	0% probability to be outside of the range
	100% probability to be like the previous 1 element(s)!


Running Inserts the even(index) elements and searches the odd(index) once of 4194304 elements:

	Splay tree:
	...took 777 miliseconds.
	...and memory 25165824 bytes.
	AVL tree:
	...took 669 miliseconds.
	...and memory 33554432 bytes.
	Splay tree with no duplications of values:
	...took 433 miliseconds.
	...and memory 1212 bytes.
	AVL tree with no duplications of values:
	...took 107 miliseconds.
	...and memory 1616 bytes.

Input data: every even element is in the range[0, 100] and every odd element has
	0% probability to be outside of the range
	80% probability to be like the previous 8 element(s)!


Running Inserts the even(index) elements and searches the odd(index) once of 4194304 elements:

	Splay tree:
	...took 854 miliseconds.
	...and memory 25165824 bytes.
	AVL tree:
	...took 689 miliseconds.
	...and memory 33554432 bytes.
	Splay tree with no duplications of values:
	...took 361 miliseconds.
	...and memory 1212 bytes.
	AVL tree with no duplications of values:
	...took 122 miliseconds.
	...and memory 1616 bytes.

Input data: every even element is in the range[0, 100] and every odd element has
	50% probability to be outside of the range
	100% probability to be like the previous 1 element(s)!


Running Inserts the even(index) elements and searches the odd(index) once of 4194304 elements:

	Splay tree:
	...took 812 miliseconds.
	...and memory 25165824 bytes.
	AVL tree:
	...took 730 miliseconds.
	...and memory 33554432 bytes.
	Splay tree with no duplications of values:
	...took 354 miliseconds.
	...and memory 1212 bytes.
	AVL tree with no duplications of values:
	...took 105 miliseconds.
	...and memory 1616 bytes.
